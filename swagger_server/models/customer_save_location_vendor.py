# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class CustomerSaveLocationVendor(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, code_email: str=None, ip: str=None, id_prospect: int=None, latitude: float=None, longitude: float=None):  # noqa: E501
        """CustomerSaveLocationVendor - a model defined in Swagger

        :param code_email: The code_email of this CustomerSaveLocationVendor.  # noqa: E501
        :type code_email: str
        :param ip: The ip of this CustomerSaveLocationVendor.  # noqa: E501
        :type ip: str
        :param id_prospect: The id_prospect of this CustomerSaveLocationVendor.  # noqa: E501
        :type id_prospect: int
        :param latitude: The latitude of this CustomerSaveLocationVendor.  # noqa: E501
        :type latitude: float
        :param longitude: The longitude of this CustomerSaveLocationVendor.  # noqa: E501
        :type longitude: float
        """
        self.swagger_types = {
            'code_email': str,
            'ip': str,
            'id_prospect': int,
            'latitude': float,
            'longitude': float
        }

        self.attribute_map = {
            'code_email': 'code_email',
            'ip': 'ip',
            'id_prospect': 'id_prospect',
            'latitude': 'latitude',
            'longitude': 'longitude'
        }
        self._code_email = code_email
        self._ip = ip
        self._id_prospect = id_prospect
        self._latitude = latitude
        self._longitude = longitude

    @classmethod
    def from_dict(cls, dikt) -> 'CustomerSaveLocationVendor':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CustomerSaveLocationVendor of this CustomerSaveLocationVendor.  # noqa: E501
        :rtype: CustomerSaveLocationVendor
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code_email(self) -> str:
        """Gets the code_email of this CustomerSaveLocationVendor.


        :return: The code_email of this CustomerSaveLocationVendor.
        :rtype: str
        """
        return self._code_email

    @code_email.setter
    def code_email(self, code_email: str):
        """Sets the code_email of this CustomerSaveLocationVendor.


        :param code_email: The code_email of this CustomerSaveLocationVendor.
        :type code_email: str
        """

        self._code_email = code_email

    @property
    def ip(self) -> str:
        """Gets the ip of this CustomerSaveLocationVendor.


        :return: The ip of this CustomerSaveLocationVendor.
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip: str):
        """Sets the ip of this CustomerSaveLocationVendor.


        :param ip: The ip of this CustomerSaveLocationVendor.
        :type ip: str
        """

        self._ip = ip

    @property
    def id_prospect(self) -> int:
        """Gets the id_prospect of this CustomerSaveLocationVendor.


        :return: The id_prospect of this CustomerSaveLocationVendor.
        :rtype: int
        """
        return self._id_prospect

    @id_prospect.setter
    def id_prospect(self, id_prospect: int):
        """Sets the id_prospect of this CustomerSaveLocationVendor.


        :param id_prospect: The id_prospect of this CustomerSaveLocationVendor.
        :type id_prospect: int
        """

        self._id_prospect = id_prospect

    @property
    def latitude(self) -> float:
        """Gets the latitude of this CustomerSaveLocationVendor.


        :return: The latitude of this CustomerSaveLocationVendor.
        :rtype: float
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude: float):
        """Sets the latitude of this CustomerSaveLocationVendor.


        :param latitude: The latitude of this CustomerSaveLocationVendor.
        :type latitude: float
        """

        self._latitude = latitude

    @property
    def longitude(self) -> float:
        """Gets the longitude of this CustomerSaveLocationVendor.


        :return: The longitude of this CustomerSaveLocationVendor.
        :rtype: float
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude: float):
        """Sets the longitude of this CustomerSaveLocationVendor.


        :param longitude: The longitude of this CustomerSaveLocationVendor.
        :type longitude: float
        """

        self._longitude = longitude
